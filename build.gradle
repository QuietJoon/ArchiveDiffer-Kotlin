buildscript {
    dependencies {
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.6.0'
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.70'
    id 'org.openjfx.javafxplugin' version '0.0.7'
}

version '0.7.2.1-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

apply plugin: 'com.google.osdetector'

ext.platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    def coroutines_version = '1.3.4'
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-javafx:$coroutines_version"
    // Seems to be needed to avoid `Exception in thread "main" java.lang.NoClassDefFoundError: javafx/application/Application`
    def javafx_version = '11.0.2'
    compile "org.openjfx:javafx-base:$javafx_version:$platform"
    compile "org.openjfx:javafx-graphics:$javafx_version:$platform"
    compile "org.openjfx:javafx-controls:$javafx_version:$platform"
    compile "org.openjfx:javafx-fxml:$javafx_version:$platform"
    // Version 16.02 does not work with Maven(?) style. Rewrite with file style
    //compile "net.sf.sevenzipjbinding:sevenzipjbinding:9.20-2.00beta"
    //compile "net.sf.sevenzipjbinding:sevenzipjbinding-all-platforms:9.20-2.00beta"
    compile files("JAVALIB_LOCAL/sevenzipjbinding-16.02-2.01beta-20170914-Windows-amd64/lib/sevenzipjbinding.jar")
    compile files("JAVALIB_LOCAL/sevenzipjbinding-16.02-2.01beta-20170914-Windows-amd64/lib/sevenzipjbinding-Windows-amd64.jar")
    compile "com.ibm.icu:icu4j:63.1"
    compile group: 'com.xenomachina', name: 'kotlin-argparser', version: '2.0.7'

}

javafx {
    version = "11.0.2"
    modules = [ 'javafx.base', 'javafx.controls', 'javafx.graphics', 'javafx.fxml' ]
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes 'Main-Class': 'MainKt'
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}
